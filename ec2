#!/bin/bash

#todo 
#retourner ordre des vars dans jq
#avoir un cache des VM existantes pour accélérer
#corriger affichage tags, qui filtrent mal
#startup, avec couches de démarrage

function listregions
{
	echo "eu-central-1 eu-west-1 eu-west-2"
	#/usr/local/bin/aws ec2 describe-regions --output text | cut -f3
}

function paramsjq
{
	echo '.Reservations[] | ( .Instances[] | {private: .PrivateIpAddress, public: .PublicIpAddress, state: .State.Name, type: .InstanceType, key: .KeyName, app: ( (.Tags // [{Key:"Name", Value:""}])[] | select(.Key == "Name") | .Value ) })'
}

function listinstances
{
	/usr/local/bin/aws ec2 describe-instances --filters "Name=tag:Name,Values=*$filter*" --region $region | jq --raw-output '.Reservations[] | ( .Instances[] | { id: .InstanceId })' | grep 'id' | sed -e 's/.*://g' -e 's/"//g'
}

function GetListEC2
{
	local region=$1
	local state=$2
	local filter=$3

	if [ -z "$filter" ]; then 
		/usr/local/bin/aws ec2 describe-instances --filters "Name=instance-state-name,Values=$state" --region $region | jq --compact-output "$(paramsjq)"
	else
		/usr/local/bin/aws ec2 describe-instances --filters "Name=instance-state-name,Values=$state" "Name=tag:Name,Values=*$filter*" --region $region | jq --compact-output "$(paramsjq)"
	fi
}

filter=$2

case $1 in
install)
	sudo apt-get install jq
	;;

stop)
	if [ -z "$filter" ]; then
		echo "$0 stop filtre"
		exit 1
	fi

	for region in $(listregions); do
		liste=$(listinstances)
		for id in $liste; do 
			echo "arrêt $id dans $region"
			/usr/local/bin/aws ec2 stop-instances --instance-ids $id --region $region
		done
	done
	;;

start)
	if [ -z "$filter" ]; then
		echo "$0 stop filtre"
		exit 1
	fi

	for region in $(listregions); do
		liste=$(listinstances)
		for id in $liste; do 
			echo "démarrage $id dans $region"
			/usr/local/bin/aws ec2 start-instances --instance-ids $id --region $region
		done
	done
	;;

restart)
	if [ -z "$filter" ]; then
		echo "$0 stop filtre"
		exit 1
	fi

	for region in $(listregions); do
		liste=$(listinstances)
		for id in $liste; do 
			echo "arrêt $id dans $region"
			/usr/local/bin/aws ec2 stop-instances --instance-ids $id --region $region
			arreted=""
			until [[ ! -z "$arreted" ]]; do
				sleep 30
				arreted=$(/usr/local/bin/aws ec2 stop-instances --instance-ids $id --region $region | grep stopped)
				echo "attente"
			done
			echo "démarrage $id dans $region"
			/usr/local/bin/aws ec2 start-instances --instance-ids $id --region $region
		done
	done
	;;

running)
	for region in $(listregions); do
		echo -e "\nListing Instances in region:'$region'..."
		GetListEC2 $region running $filter
	done
	;;

stopped)
	for region in $(listregions); do
		echo -e "\nListing Instances in region:'$region'..."
 		GetListEC2 $region stopped $filter
	done
	;;

list)
	for region in $(listregions); do
		echo -e "\nListing Instances in region:'$region'..."
		GetListEC2 $region "*" $filter
	done
	;;

*) 
	echo "$0 install"
	echo "$0 running|stopped|list [filtre optionnel]"
	echo "$0 stop OSEA-dev"
	echo "$0 stop OSEA-form"
	echo "$0 stop GLASS"
	echo "$0 stop|start LABBOOK_build_iso"
esac
